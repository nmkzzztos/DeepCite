"use strict";(self.webpackChunkdeepcite=self.webpackChunkdeepcite||[]).push([[5899],{1920:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"This guide will help you set up the DeepCite development environment.","source":"@site/docs/introduction.md","sourceDirName":".","slug":"/getting-started","permalink":"/deepcite/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/nmkzzztos/deepcite/tree/main/docs/introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"getting-started","title":"Getting Started","sidebar_position":1},"sidebar":"tutorialSidebar"}');var r=i(4848),t=i(8453);const l={id:"getting-started",title:"Getting Started",sidebar_position:1},o="Getting Started",c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quick Start with Docker Compose",id:"quick-start-with-docker-compose",level:2},{value:"Manual Setup",id:"manual-setup",level:2},{value:"1. Backend Setup",id:"1-backend-setup",level:3},{value:"2. Frontend Setup",id:"2-frontend-setup",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Development Workflow",id:"development-workflow",level:2},{value:"Option 1: Manual Setup (Current Recommended)",id:"option-1-manual-setup-current-recommended",level:3},{value:"Option 2: Docker Compose (When Fully Configured)",id:"option-2-docker-compose-when-fully-configured",level:3},{value:"API Documentation",id:"api-documentation",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Backend Issues",id:"backend-issues",level:3},{value:"Frontend Issues",id:"frontend-issues",level:3},{value:"Vector Database",id:"vector-database",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"For Production Deployment",id:"for-production-deployment",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,r.jsx)(n.p,{children:"This guide will help you set up the DeepCite development environment."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Python 3.11+"}),"\n",(0,r.jsx)(n.li,{children:"Node.js 18+"}),"\n",(0,r.jsx)(n.li,{children:"Docker and Docker Compose (optional, for containerized setup)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"quick-start-with-docker-compose",children:"Quick Start with Docker Compose"}),"\n",(0,r.jsx)(n.p,{children:"The easiest way to get started is using Docker Compose:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone <repository-url>\ncd deepcite\n\n# Start all services (backend, frontend)\ndocker-compose up -d\n\n# Check service health\ndocker-compose ps\n\n# View logs\ndocker-compose logs -f backend\n"})}),"\n",(0,r.jsx)(n.p,{children:"The application will be available at:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Frontend: ",(0,r.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})]}),"\n",(0,r.jsxs)(n.li,{children:["Backend API: ",(0,r.jsx)(n.a,{href:"http://localhost:5000",children:"http://localhost:5000"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"manual-setup",children:"Manual Setup"}),"\n",(0,r.jsx)(n.h3,{id:"1-backend-setup",children:"1. Backend Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd backend\n\n# Create virtual environment\npython -m venv venv\n\n# Activate virtual environment\n# On Windows:\nvenv\\Scripts\\activate\n# On macOS/Linux:\nsource venv/bin/activate\n\n# Install dependencies\npip install -r requirements.txt\n\n# Create environment file\n# Copy the example (if available) or create your own\ncp .env.example .env  # Optional, or create manually\n# Edit .env with your configuration (see Environment Variables section below)\n\n# Initialize database\npython startup.py\n\n# Run the application\npython app.py\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The backend will be available at ",(0,r.jsx)(n.code,{children:"http://localhost:5000"})]}),"\n",(0,r.jsx)(n.h3,{id:"2-frontend-setup",children:"2. Frontend Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd frontend\n\n# Install dependencies\nnpm install\n\n# Start development server\nnpm run dev\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The frontend will be available at ",(0,r.jsx)(n.code,{children:"http://localhost:3000"})]}),"\n",(0,r.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:".env"})," file in the ",(0,r.jsx)(n.code,{children:"backend/"})," directory with the following variables:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-env",children:"# Database Configuration\n# For SQLite (default, development):\nDATABASE_URL=sqlite:///instance/deepcite.db\n\n# For PostgreSQL (production):\n# DATABASE_URL=postgresql://user:password@localhost:5432/deepcite\n\n# Flask Configuration\nSECRET_KEY=your-secret-key-here-change-in-production\nFLASK_ENV=development\nUPLOAD_FOLDER=./uploads\nMAX_CONTENT_LENGTH=16777216\n\n# Vector Database (Chroma)\nCHROMA_PERSIST_DIRECTORY=./chroma_db\nCHROMA_TELEMETRY_ENABLED=false\n\n# AI Model Providers (Optional)\n# OpenAI\nOPENAI_API_KEY=your-openai-api-key\n\n# Anthropic\nANTHROPIC_API_KEY=your-anthropic-api-key\n\n# Perplexity\nPERPLEXITY_API_KEY=your-perplexity-api-key\n\n# OpenRouter\nOPENROUTER_API_KEY=your-openrouter-api-key\n\n# PDF Parsing Configuration\nGROBID_URL=http://localhost:8070\nENABLE_GROBID=true\nENABLE_TOC_PARSING=true\nDEFAULT_PARSING_STRATEGY=auto\n\n# Local Models (if using Ollama or llama.cpp)\nENABLE_LOCAL_MODELS=false\nOLLAMA_ENDPOINT=http://localhost:11434\nLLAMACPP_ENDPOINT=http://localhost:8080\n"})}),"\n",(0,r.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,r.jsx)(n.h3,{id:"option-1-manual-setup-current-recommended",children:"Option 1: Manual Setup (Current Recommended)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Terminal 1 - Backend"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd backend\nsource venv/bin/activate  # or venv\\Scripts\\activate on Windows\npython app.py\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Terminal 2 - Frontend"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd frontend\nnpm run dev\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"option-2-docker-compose-when-fully-configured",children:"Option 2: Docker Compose (When Fully Configured)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,r.jsx)(n.h2,{id:"api-documentation",children:"API Documentation"}),"\n",(0,r.jsx)(n.p,{children:"Once the backend is running, test the API:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Health check\ncurl http://localhost:5000/api/v1/health\n\n# List documents\ncurl http://localhost:5000/api/v1/documents\n\n# List workspaces\ncurl http://localhost:5000/api/v1/workspaces\n"})}),"\n",(0,r.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"backend/"})," - Flask REST API server"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"frontend/"})," - Vue.js 3 client application"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"uploads/"})," - Uploaded PDF files storage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"docker-compose.yml"})," - Multi-service orchestration config"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"backend-issues",children:"Backend Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Database Connection Errors"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Verify ",(0,r.jsx)(n.code,{children:"DATABASE_URL"})," in ",(0,r.jsx)(n.code,{children:".env"})," is correct"]}),"\n",(0,r.jsxs)(n.li,{children:["For SQLite: ensure ",(0,r.jsx)(n.code,{children:"instance/"})," directory exists and is writable"]}),"\n",(0,r.jsx)(n.li,{children:"For PostgreSQL: ensure PostgreSQL is running and accessible"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Port Already in Use"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Backend defaults to port 5000"}),"\n",(0,r.jsxs)(n.li,{children:["Check if port is in use: ",(0,r.jsx)(n.code,{children:"lsof -i :5000"})," (macOS/Linux)"]}),"\n",(0,r.jsxs)(n.li,{children:["Or modify ",(0,r.jsx)(n.code,{children:"app.py"})," to use a different port"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Missing Dependencies"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Run: ",(0,r.jsx)(n.code,{children:"pip install -r requirements.txt"})]}),"\n",(0,r.jsx)(n.li,{children:"Ensure you're in the correct virtual environment"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"frontend-issues",children:"Frontend Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Node Module Issues"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Clear and reinstall: ",(0,r.jsx)(n.code,{children:"rm -rf node_modules package-lock.json && npm install"})]}),"\n",(0,r.jsxs)(n.li,{children:["Check Node.js version: ",(0,r.jsx)(n.code,{children:"node --version"})," (should be 18+)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Port 3000 Already in Use"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Frontend uses Vite dev server on port 3000"}),"\n",(0,r.jsxs)(n.li,{children:["Change in ",(0,r.jsx)(n.code,{children:"vite.config.ts"})," if needed"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"API Connection Failed"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensure backend is running on ",(0,r.jsx)(n.code,{children:"http://localhost:5000"})]}),"\n",(0,r.jsx)(n.li,{children:"Check browser console for errors"}),"\n",(0,r.jsx)(n.li,{children:"Verify CORS is enabled in backend"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"vector-database",children:"Vector Database"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Chroma Connection Issues"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default uses local SQLite-backed Chroma"}),"\n",(0,r.jsxs)(n.li,{children:["Data stored in ",(0,r.jsx)(n.code,{children:"chroma_db/"})," directory"]}),"\n",(0,r.jsxs)(n.li,{children:["If issues persist, try clearing: ",(0,r.jsx)(n.code,{children:"rm -rf chroma_db/"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"After successful setup:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Access the application at ",(0,r.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})]}),"\n",(0,r.jsx)(n.li,{children:"Create a workspace"}),"\n",(0,r.jsx)(n.li,{children:"Upload PDF documents through the web interface"}),"\n",(0,r.jsx)(n.li,{children:"Start chatting with your documents using RAG"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"for-production-deployment",children:"For Production Deployment"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use PostgreSQL instead of SQLite"}),"\n",(0,r.jsxs)(n.li,{children:["Set ",(0,r.jsx)(n.code,{children:"SECRET_KEY"})," to a strong random value"]}),"\n",(0,r.jsxs)(n.li,{children:["Use environment-specific ",(0,r.jsx)(n.code,{children:".env"})," files"]}),"\n",(0,r.jsxs)(n.li,{children:["Set ",(0,r.jsx)(n.code,{children:"FLASK_ENV=production"})," and ",(0,r.jsx)(n.code,{children:"DEBUG=false"})]}),"\n",(0,r.jsx)(n.li,{children:"Consider using Gunicorn for serving the Flask app"}),"\n",(0,r.jsx)(n.li,{children:"Set up a reverse proxy (nginx) for the frontend build"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);